---
resources:
- name: opsman-product
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: ops-manager-vsphere-(.*).ova

- name: pas-stemcell
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: pas-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz

- name: pas-product
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: cf-(.*).pivotal

- name: mysql-product
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: pivotal-mysql-(.*).pivotal

- name: mysql-stemcell
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: mysql-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz

- name: healthwatch-product
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: p-healthwatch-(.*).pivotal

- name: healthwatch-stemcell
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: healthwatch-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: platform-automation-tasks-(3.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((s3.username))
    bucket: ((s3_bucket))
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    regexp: platform-automation-image-(3.*).tgz

- name: installation
  type: s3
  source:
    regexp: installation-(.*).zip
    access_key_id: ((s3.username))
    bucket: opsman-backups
    endpoint: ((s3_endpoint))
    secret_access_key: ((s3.password))
    
- name: config
  type: git
  source:
    private_key: ((git.private_key))
    uri: git@github.com:tythomas/concourse-pez-pipeline.git
    branch: master
    paths: [((ENVIRONMENT))/env/* ((ENVIRONMENT))/config/* ((ENVIRONMENT))/state/* ((ENVIRONMENT))/download-product-configs/*]

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: daily-trigger
  type: time
  source:
    interval: 24h

# This task is used in multiple jobs
# The yaml anchor "*credhub-interpolate" is used in its place
credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    CREDHUB_CA_CERT: ((credhub-ca.certificate))
    PREFIX: '/concourse/((ENVIRONMENT))'
    INTERPOLATION_PATHS: '((ENVIRONMENT))/config ((ENVIRONMENT))/env'
  input_mapping:
    files: config
  output_mapping:
    interpolated-files: interpolated-config

jobs:
- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: one-time-trigger
        trigger: true
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: opsman-product
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      input_mapping:
        image: opsman-product
        state: config
        config: interpolated-config
      params:
        STATE_FILE: ((ENVIRONMENT))/state/state.yml
        OPSMAN_CONFIG_FILE: ((ENVIRONMENT))/config/opsman.yml
      ensure: &make-state-commit
        do:
          - task: make-commit
            image: platform-automation-image
            file: platform-automation-tasks/tasks/make-git-commit.yml
            input_mapping:
              repository: config
              file-source: generated-state
            output_mapping:
              repository-commit: configuration-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: ((ENVIRONMENT))/state/state.yml
              GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
              GIT_AUTHOR_NAME: "Platform Automation Bot"
              COMMIT_MESSAGE: 'Update state file'
          - put: config
            params:
              repository: configuration-commit
              merge: true
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: interpolated-config
        config: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
        AUTH_CONFIG_FILE: ((ENVIRONMENT))/config/auth.yml
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        config: interpolated-config
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
        DIRECTOR_CONFIG_FILE: ((ENVIRONMENT))/config/director.yml
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: export-installation
  serial: true
  plan:
    - aggregate:
      - get: daily-trigger
        trigger: true
      - get: platform-automation-image
        params:
          unpack: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      input_mapping:
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
        INSTALLATION_FILE: installation-$timestamp.zip
    - put: installation
      params:
        file: installation/installation*.zip

- name: upgrade-opsman
  serial: true
  serial_groups: [ install ]
  plan:
    - aggregate:
      - get: one-time-trigger
        passed: [ install-opsman ]
      - get: platform-automation-image
        params:
          unpack: true
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: opsman-product
      - get: installation
        passed: [ export-installation ]
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: upgrade-opsman
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upgrade-opsman.yml
      input_mapping:
        image: opsman-product
        state: config
        config: interpolated-config
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
        OPSMAN_CONFIG_FILE: ((ENVIRONMENT))/config/opsman.yml
        STATE_FILE: ((ENVIRONMENT))/state/state.yml
      ensure: *make-state-commit
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: upload-and-stage-pas
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upgrade-opsman
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: pas-product
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: upload-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: pas-product
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
    - task: stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      input_mapping:
        product: pas-product
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: upload-and-stage-mysql
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - configure-pas
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: mysql-product
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: upload-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: mysql-product
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
    - task: stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      input_mapping:
        product: mysql-product
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: upload-and-stage-healthwatch
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - configure-pas
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: healthwatch-product
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: upload-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: healthwatch-product
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
    - task: stage-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-product.yml
      input_mapping:
        product: healthwatch-product
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: upload-stemcells
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upgrade-opsman
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: pas-stemcell
        trigger: true
      - get: mysql-stemcell
        trigger: true
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: upload-pas-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: interpolated-config
        stemcell: pas-stemcell
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
    - task: upload-mysql-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: interpolated-config
        stemcell: mysql-stemcell
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
    - task: upload-healthwatch-stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        env: interpolated-config
        stemcell: healthwatch-stemcell
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: configure-pas
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upload-and-stage-pas
          - upload-stemcells
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: configure-pas
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: interpolated-config
        env: interpolated-config
      params:
        CONFIG_FILE: ((ENVIRONMENT))/config/pas.yml
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: configure-mysql
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upload-and-stage-mysql
          - upload-stemcells
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: configure-mysql
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: interpolated-config
        env: interpolated-config
      params:
        CONFIG_FILE: ((ENVIRONMENT))/config/mysql.yml
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: configure-healthwatch
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - upload-and-stage-healthwatch
          - upload-stemcells
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: configure-healthwatch
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: interpolated-config
        env: interpolated-config
      params:
        CONFIG_FILE: ((ENVIRONMENT))/config/healthwatch.yml
        ENV_FILE: ((ENVIRONMENT))/env/env.yml

- name: apply-product-changes
  serial: true
  plan:
    - aggregate:
      - get: platform-automation-image
        params:
          unpack: true
        passed:
          - configure-pas
          - configure-mysql
        trigger: true
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: config
    - task: credhub-interpolate
      <<: *credhub-interpolate
    - task: apply-product-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-changes.yml
      input_mapping:
        env: interpolated-config
      params:
        ENV_FILE: ((ENVIRONMENT))/env/env.yml
